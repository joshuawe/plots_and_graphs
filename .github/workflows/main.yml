# name: API workflow

# on: [push, pull_request]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     name: Test python API
#     steps:
#     - uses: actions/checkout@v1
#     - name: Install requirements
#       run: pip install -r requirements.txt
#     - name: Run tests and collect coverage
#       run: pytest --cov .
#     - name: Upload coverage reports to Codecov
#       run: |
#         # Replace `linux` below with the appropriate OS
#         # Options are `alpine`, `linux`, `macos`, `windows`
#         curl -Os https://uploader.codecov.io/latest/linux/codecov
#         chmod +x codecov
#         ./codecov -t ${CODECOV_TOKEN}
#     - name: Upload coverage reports to Codecov
#       uses: codecov/codecov-action@v3
#       env:
#         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}




# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  linter:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: |
          make virtualenv
          source .venv/bin/activate
          make install
      - name: Run linter
        run: make lint

  tests_linux:
    needs: linter
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install project
        run: make install
      - name: Run tests
        run: make test
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v3
        # with:
        #   fail_ci_if_error: true

  # tests_mac:
  #   needs: linter
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.9]
  #       os: [macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install project
  #       run: make install
  #     - name: Run tests
  #       run: make test

  # tests_win:
  #   needs: linter
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       python-version: [3.9]
  #       os: [windows-latest]
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #     - name: Install Pip
  #       run: pip install --user --upgrade pip
  #     - name: Install project
  #       run: pip install -e .[test]
  #     - name: run tests
  #       run: pytest -s -vvvv -l --tb=long tests